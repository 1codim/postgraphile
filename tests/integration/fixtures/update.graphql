mutation UpdateTest {
	a: updatePost(input: {rowId: 1, newHeadline: "Whoah"}) { ...payload }
	b: updatePost(input: {rowId: 1, newAuthorId: 5}) { ...payload }
	c: updatePost(input: {rowId: 1, newHeadline: "Hello, world!", newAuthorId: 11, clientMutationId: "123456"}) { ...payload }
	d: updatePerson(input: {rowId: 11, newGivenName: "Test", newFamilyName: "User"}) {
		clientMutationId
		person {
	    rowId
	    givenName
	    familyName
	    postNodesByAuthorId {
	      nodes {
	        rowId
	        headline
	      }
	    }
	  }
	}
	e: updatePost(input: {rowId: 1, newHeadline: "next", newAuthorId: 11}) { ...payload }
	f: updatePost(input: {rowId: 1, newRowId: 42, clientMutationId: "abcdefg"}) { ...payload }
}

fragment payload on UpdatePostPayload {
	clientMutationId
  post {
    rowId
    headline
    authorId
    personByAuthorId {
      rowId
      givenName
      familyName
    }
  }
}
